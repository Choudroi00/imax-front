name: DeployReactApp

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: SETUP CHECKOUT
        uses: actions/checkout@v4
        
      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.3
        with:
          node-version: v20.13.1
          
      - name: Install dependencies
        run: npm install

      - name: Build the project
        run: npm run build
        
      - name: Compress The Build 
        run: zip -r build.zip dist/*
        
      - name: Upload Artificat
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: build.zip
  deploy:
    runs-on: ubuntu-latest
    needs: build

    env:
      HOSTINGER_USER: 'u131354144'
      DOMAIN: 'imax-store.com'
      DEPLOY_PATH: 'front-dev'
      # RECOVERY_PATH: 'dev-base'
      GIT_REPO: 'imax-front'
      # must add those secrets : SSH_USERNAME, SSH_HOST, SSH_PORT, SSH_PRIVATE_KEY -> for server || GIT_SSH -> for repo git ssh 
      GIT_BRANCH: 'main'
      GIT_USER: 'Choudroi00'

    steps:
      - name: SETUP CHECKOUT
        uses: actions/checkout@v4

      - name: Download Artificats
        uses: actions/download-artifact@v4
        with:
          name: app-build
          path: .
          
      - name: SETUP SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add Host Key to known_hosts
        run: ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Move Artificats To Server
        run: scp -P ${{ secrets.SSH_PORT }} build.zip ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/home/${{ env.HOSTINGER_USER }}/domains/${{ env.DOMAIN }}/public_html/${{ env.DEPLOY_PATH }}/

      - name: Post Deploy
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} -p ${{ secrets.SSH_PORT }} << 'EOF'

          cd /home/${{ env.HOSTINGER_USER }}/domains/${{ env.DOMAIN }}/public_html/${{ env.DEPLOY_PATH }}/

          unzip build.zip -d .

          cp -r ./dist/* .

          rm -rf dist

          rm -rf build.zip

          echo "${{ vars.HTACCESS }}" > ./.htacess

          EOF


        
          









        
